using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WarSQLiv2.Exploitation.Control
{
    class FileCreationControl
    {
        private string _exception;
        private List<string> _lstFoundedAddress;

        public List<string> LstFoundedAddres
        {
            get { return _lstFoundedAddress; }
            set { _lstFoundedAddress = value; }
        }
        public string Exception
        {
            get { return _exception; }
            set { _exception = value; }
        }
        public void FileCreateControl()
        {
            var changeLang = new LanguageControl();
            changeLang.FindLang();
            var listDirecroty = Directory.GetFiles(@"Scanner\FoundServer\", "*.*", SearchOption.AllDirectories);
            if (listDirecroty.Count() > 20)
            {
                File.Delete(@"Scanner\FoundServer\*.*");
            }
            else
            {
                try
                {
                    var rnd = new Random();
                    var chr = "0123456789ABCDEFGHIJKLMNOPRSTUVWXYZ".ToCharArray();
                    var randomFileName = string.Empty;
                    Parallel.For(0, 10, i =>
                    {
                        randomFileName += chr[rnd.Next(0, chr.Length - 1)].ToString();
                    });
                    const string fileName = @"Scanner\FoundServer\SqlServerList.txt";
                    var fileMoveName = @"Scanner\FoundServer\SqlServerList.txt.bak" + Convert.ToString(DateTime.Now.ToShortDateString());
                    if (File.Exists(fileName))
                    {
                        if (File.Exists(fileMoveName))
                        {
                            File.Move(fileMoveName, fileMoveName + randomFileName);
                        }
                        File.Move(fileName, fileMoveName);
                    }
                    var createSqlServerListText = new StreamWriter(fileName);
                    Parallel.For(0, LstFoundedAddres.Count, i =>
                    {
                        createSqlServerListText.WriteLine(LstFoundedAddres[i]);
                    });
                    createSqlServerListText.Flush();
                    createSqlServerListText.Close();
                }
                catch (FileNotFoundException exp)
                {
                    _exception = string.Empty;
                    _exception = string.Format("{2}{3}{0}{1}", Environment.NewLine, exp.Message, changeLang.SelectedLanguage.GetString("GeneralError1"), changeLang.SelectedLanguage.GetString("GeneralError2"));
                }
            }
        }
        public void FileSizeControl()
        {
            var changeLang = new LanguageControl();
            changeLang.FindLang();
            try
            {
                var listDirecroty = Directory.GetFiles(@"Scanner\FoundServer\", "*.*", SearchOption.AllDirectories);
                if (listDirecroty.Count() > 20)
                {
                    for (var i = 0; i < listDirecroty.Count(); i++)
                    {
                        File.Delete(listDirecroty[i]);
                    }
                }
            }
            catch (Exception exp)
            {
                _exception = string.Empty;
                _exception = string.Format("{2}{3}{0}{1}", Environment.NewLine, exp.Message, changeLang.SelectedLanguage.GetString("GeneralError1"), changeLang.SelectedLanguage.GetString("GeneralError2"));
            }
        }
    }
}
